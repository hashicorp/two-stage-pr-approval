name: Two-Stage PR Review Process

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled, ready_for_review, converted_to_draft]
  pull_request_review:
    types: [submitted]

jobs:
  manage-pr-status:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Check PR status
        id: check-status
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.payload.pull_request ? context.payload.pull_request.number : context.payload.pull_request_review.pull_request.number;
            
            // Get current PR details
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: pr_number
            });
            
            // Get PR labels
            const labels = pr.data.labels.map(label => label.name);
            const hasInternalApprovalLabel = labels.includes('internal-approval');
            const isDraft = pr.data.draft;
            
            // Get PR reviews
            const reviews = await github.rest.pulls.listReviews({
              owner,
              repo,
              pull_number: pr_number
            });
            
            // Check if the PR has an approval from your team
            // Replace 'your-team' with the actual GitHub team name or specific usernames
            const yourTeamMembers = ['mukeshjc'];
            const hasInternalApproval = reviews.data.some(review => 
              review.state === 'APPROVED' && 
              yourTeamMembers.includes(review.user.login)
            );
            
            // Output these values for use in later steps
            return {
              hasInternalApprovalLabel,
              hasInternalApproval,
              isDraft
            };

      - name: Convert to draft if no internal approval
        if: ${{ !fromJSON(steps.check-status.outputs.result).hasInternalApprovalLabel && !fromJSON(steps.check-status.outputs.result).isDraft }}
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.payload.pull_request ? context.payload.pull_request.number : context.payload.pull_request_review.pull_request.number;
            
            // Convert to draft PR
            await github.rest.pulls.update({
              owner,
              repo,
              pull_number: pr_number,
              draft: true
            });
            
            // Add an internal review message
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: pr_number,
              body: 'This PR has been automatically converted to draft status pending internal team review. Once approved by an internal team member, it will be made available for wider review.'
            });

      - name: Apply internal-approval label if approved by team
        if: ${{ fromJSON(steps.check-status.outputs.result).hasInternalApproval && !fromJSON(steps.check-status.outputs.result).hasInternalApprovalLabel }}
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.payload.pull_request ? context.payload.pull_request.number : context.payload.pull_request_review.pull_request.number;
            
            // Add the internal-approval label
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: pr_number,
              labels: ['internal-approval']
            });
            
            // Add a comment noting the internal approval
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: pr_number,
              body: 'Internal team approval granted! This PR is now ready for wider review.'
            });

      - name: Convert from draft to ready if has internal approval
        if: ${{ fromJSON(steps.check-status.outputs.result).hasInternalApprovalLabel && fromJSON(steps.check-status.outputs.result).isDraft }}
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.payload.pull_request ? context.payload.pull_request.number : context.payload.pull_request_review.pull_request.number;
            
            // Convert from draft to ready for review
            await github.rest.pulls.update({
              owner,
              repo,
              pull_number: pr_number,
              draft: false
            });
            
            // Notify about the status change
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: pr_number,
              body: 'This PR has received internal approval and is ready for wider review.'
            });
